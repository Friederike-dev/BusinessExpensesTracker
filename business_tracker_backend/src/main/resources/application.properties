# Server-Konfiguration # API läuft auf http://localhost:8080
server.port=8080
# server.address=127.0.0.1
# Alle Endpoints beginnen mit /api
server.servlet.context-path=/api

# Database-Konfiguration (H2 In-Memory)
# jdbc:h2:mem:businesstracker: In-Memory Database (Daten verschwinden bei Neustart)
# Datenbank  wird hier erstellt und läuft im RAM
# sie ist also nur für Development geeignet
spring.datasource.url=jdbc:h2:mem:businesstracker
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 Console (für Database-Inspektion)
# die beiden Anweisungen aktivieren die H2 Console --> eine Web-Oberfläche zum Verwalten der Datenbank
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA/Hibernate-Konfiguration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#ddl-auto=create-drop: Tabellen werden automatisch erstellt/gelöscht
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
# show-sql=true: Alle SQL-Queries werden in Console ausgegeben
spring.jpa.properties.hibernate.format_sql=true

# Bessere Logs für Development
logging.level.com.adlibita.businesstracker=DEBUG
logging.level.org.springframework.web=DEBUG
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Sample Data Configuration
app.sample-data.enabled=true
app.sample-data.count=6

# JSON DateTime Serialization - Vereinfacht
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss
spring.jackson.time-zone=Europe/Berlin

# CORS Configuration für Flutter Web App
management.endpoints.web.cors.allowed-origins=http://localhost:3000,http://localhost:*
management.endpoints.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
management.endpoints.web.cors.allowed-headers=*